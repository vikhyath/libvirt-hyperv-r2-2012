/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _LXC_MONITOR_PROTOCOL_H_RPCGEN
#define _LXC_MONITOR_PROTOCOL_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


enum virLXCMonitorExitStatus {
        VIR_LXC_MONITOR_EXIT_STATUS_ERROR = 0,
        VIR_LXC_MONITOR_EXIT_STATUS_SHUTDOWN = 1,
        VIR_LXC_MONITOR_EXIT_STATUS_REBOOT = 2,
};
typedef enum virLXCMonitorExitStatus virLXCMonitorExitStatus;

struct virLXCMonitorExitEventMsg {
        enum virLXCMonitorExitStatus status;
};
typedef struct virLXCMonitorExitEventMsg virLXCMonitorExitEventMsg;

struct virLXCMonitorInitEventMsg {
        uint64_t initpid;
};
typedef struct virLXCMonitorInitEventMsg virLXCMonitorInitEventMsg;
#define VIR_LXC_MONITOR_PROGRAM 0x12341234
#define VIR_LXC_MONITOR_PROGRAM_VERSION 1

enum virLXCMonitorProcedure {
        VIR_LXC_MONITOR_PROC_EXIT_EVENT = 1,
        VIR_LXC_MONITOR_PROC_INIT_EVENT = 2,
};
typedef enum virLXCMonitorProcedure virLXCMonitorProcedure;

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_virLXCMonitorExitStatus (XDR *, virLXCMonitorExitStatus*);
extern  bool_t xdr_virLXCMonitorExitEventMsg (XDR *, virLXCMonitorExitEventMsg*);
extern  bool_t xdr_virLXCMonitorInitEventMsg (XDR *, virLXCMonitorInitEventMsg*);
extern  bool_t xdr_virLXCMonitorProcedure (XDR *, virLXCMonitorProcedure*);

#else /* K&R C */
extern bool_t xdr_virLXCMonitorExitStatus ();
extern bool_t xdr_virLXCMonitorExitEventMsg ();
extern bool_t xdr_virLXCMonitorInitEventMsg ();
extern bool_t xdr_virLXCMonitorProcedure ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_LXC_MONITOR_PROTOCOL_H_RPCGEN */
